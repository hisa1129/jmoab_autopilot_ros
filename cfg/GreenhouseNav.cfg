#!/usr/bin/env python

PACKAGE = "jmoab_autopilot_ros"

from dynamic_reconfigure.parameter_generator_catkin import *
import os

cfg_file_name = "GreenhouseNav"

gen = ParameterGenerator()

gen.add("wall_scan_ang", double_t, 0, "an angle of lidar to scan left/right wall", 15.0, 0.0, 180.0)
gen.add("front_stop_dist", double_t, 0, "a distance of front stop, height of triangle", 1.0, 0.0, 3.0)
gen.add("right_dist_in_lane", double_t, 0, "a distance on right side to say the bot is inside lane", 0.75, 0.0, 3.0)
gen.add("left_dist_in_lane", double_t, 0, "a distance on left side to say the bot is inside lane", 0.6, 0.0, 3.0)

gen.add("max_start_str", int_t, 0, "maximum sbus steering to make the cart start turning right", 1024, 1024, 1100)
gen.add("min_start_str", int_t, 0, "minimum sbus steering to make the cart start turning left", 1024, 948, 1024)
gen.add("str_mid", int_t, 0, "sbus steering middle, it would be used for trimming left/right in case of go straight to make the cart not curve", 1024,924,1124)
gen.add("wf_str_adj", int_t, 0, "sbus steering range adjuster from max/min start str for wall-following PID controller", 90,0,400)
gen.add("lc_str_adj", int_t, 0, "sbus steering range adjuster from max/min start str for lane-changing PID controller", 90,0,400)
gen.add("rh_str_adj", int_t, 0, "sbus steering range adjuster from max/min start str for re-heading PID controller", 90,0,400)
gen.add("ut_str_adj", int_t, 0, "sbus steering range adjuster from max/min start str for u-turning PID controller", 90,0,400)

gen.add("wf_thr", int_t, 0, "throttle speed of wall-following mode", 1105,1024,1680)
gen.add("lc_thr", int_t, 0, "throttle speed of lane-changing mode", 1144,1024,1680)

gen.add("wf_setpoint", double_t, 0, "Setpoint distance of wall-following, unit in meters", 0.5, 0.1, 5.0)
gen.add("wf_p", double_t, 0, "This is P gain value of wall-following control", 1.0,0.0,1000.0)
gen.add("wf_i", double_t, 0, "This is I gain value of wall-following control", 0.0,0.0,1000.0)
gen.add("wf_d", double_t, 0, "This is D gain value of wall-following control", 0.0,0.0,1000.0)

gen.add("lc_setpoint", double_t, 0, "Setpoint distance of lane-changing, unit in meters", 0.75, 0.1, 5.0)
gen.add("lc_p", double_t, 0, "This is P gain value of lane-changing control", 1.0,0.0,1000.0)
gen.add("lc_i", double_t, 0, "This is I gain value of lane-changing control", 0.0,0.0,1000.0)
gen.add("lc_d", double_t, 0, "This is D gain value of lane-changing control", 0.0,0.0,1000.0)

gen.add("rh_p", double_t, 0, "This is P gain value of re-heading control", 1.0,0.0,1000.0)
gen.add("rh_i", double_t, 0, "This is I gain value of re-heading control", 0.0,0.0,1000.0)
gen.add("rh_d", double_t, 0, "This is D gain value of re-heading control", 0.0,0.0,1000.0)

gen.add("ut_p", double_t, 0, "This is P gain value of u-turning control", 1.0,0.0,1000.0)
gen.add("ut_i", double_t, 0, "This is I gain value of u-turning control", 0.0,0.0,1000.0)
gen.add("ut_d", double_t, 0, "This is D gain value of u-turning control", 0.0,0.0,1000.0)


exit(gen.generate(PACKAGE, "jmoab_autopilot_ros", cfg_file_name))